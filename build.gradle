plugins {
	id 'org.springframework.boot' version '2.2.4.RELEASE' apply false
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
	id 'java'
	id 'java-library'
	id 'signing'
	id 'maven'
}

group = 'net.savantly.security'
archivesBaseName = "spring-role-permissions"
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
	mavenCentral()
}

ext.isReleaseVersion = !version.endsWith("SNAPSHOT")
ext.ossrhUsername = project.hasProperty('ossrhUsername') ? project.ossrhUsername : ''
ext.ossrhPassword = project.hasProperty('ossrhPassword') ? project.ossrhPassword : ''

// Add Javadoc JAR and sources JAR to artifact
task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}
task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}
artifacts {
    archives javadocJar, sourcesJar
}

signing {
	required { isReleaseVersion && gradle.taskGraph.hasTask("uploadArchives") }
    //useGpgCmd()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
	
	testImplementation 'org.springframework.boot:spring-boot-starter-web'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	testImplementation 'org.springframework.security:spring-security-test',
		'com.h2database:h2'
}

test {
	useJUnitPlatform()
}

dependencyManagement {
	imports {
		mavenBom org.springframework.boot.gradle.plugin.SpringBootPlugin.BOM_COORDINATES
	}
}


// Build, sign, and upload
uploadArchives {
    repositories {
        mavenDeployer {

            // Sign POM
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            // Destination
            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }
            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            // Add required metadata to POM
            pom.project {
                name 'Role Permissions Spring Boot Starter'
                packaging 'jar'
                description 'Role to Permission mapping for Spring Boot'
                url 'https://github.com/savantly-net/spring-role-permissions'

                scm {
                    connection 'scm:git:git://github.com/savantly-net/spring-role-permissions.git'
                        developerConnection 'scm:git:ssh://github.com/savantly-net/spring-role-permissions.git'
                        url 'http://github.com/savantly-net/spring-role-permissions/tree/master'
                }

                licenses {
                    license {
                        name 'The Apache License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                developers {
                    developer {
                        name 'Jeremy Branham'
                        email 'Jeremy@Savantly.net'
                        organization 'net.savantly'
                        organizationUrl 'https://github.com/savantly-net/'
                    }
                }
            }
        }
    }
}
